# Generated by Django 5.1.1 on 2024-09-14 17:03
from datetime import date
import random
from io import BytesIO


from django.contrib.auth.hashers import make_password
from requests import get
from django.core.files import File
from django.db import migrations

def assign_avatar_from_dicebear(user):
    url = f"https://xsgames.co/randomusers/avatar.php?g={user.gender}"  # URL для генерации случайного аватара
    response = get(url)
    if response.status_code == 200:
        avatar_file = BytesIO(response.content)
        user.avatar.save(f"{user.email}_avatar.jpg", File(avatar_file), save=True)
def create_doctors_and_patients(apps, schema_editor):
    User = apps.get_model('users', 'User')
    Role = apps.get_model('users', 'Role')
    SubRole = apps.get_model('users', 'SubRole')

    doctor_role = Role.objects.get(role='doctor')
    patient_role = Role.objects.get(role='patient')

    def generate_phone():
        return '+380' + ''.join([str(random.randint(0, 9)) for _ in range(10)])

    # Получаем все подроли для врачей
    sub_roles = list(SubRole.objects.filter(main_role=doctor_role))

    # Врачи
    doctors = [
        {'first_name': 'Иван', 'last_name': 'Смирнов', 'email': 'ivan.smirnov@clinic.com', 'phone': generate_phone(),
         'gender': 'male', 'date_birth': date(1980, 1, 15)},
        {'first_name': 'Ольга', 'last_name': 'Иванова', 'email': 'olga.ivanova@clinic.com', 'phone': generate_phone(),
         'gender': 'female', 'date_birth': date(1981, 4, 22)},
        {'first_name': 'Алексей', 'last_name': 'Кузнецов', 'email': 'alexey.kuznetsov@clinic.com',
         'phone': generate_phone(), 'gender': 'male', 'date_birth': date(1978, 7, 30)},
        {'first_name': 'Мария', 'last_name': 'Попова', 'email': 'maria.popova@clinic.com', 'phone': generate_phone(),
         'gender': 'female', 'date_birth': date(1983, 11, 9)},
        {'first_name': 'Дмитрий', 'last_name': 'Соколов', 'email': 'dmitry.sokolov@clinic.com',
         'phone': generate_phone(), 'gender': 'male', 'date_birth': date(1985, 6, 3)},
        {'first_name': 'Елена', 'last_name': 'Морозова', 'email': 'elena.morozova@clinic.com',
         'phone': generate_phone(), 'gender': 'female', 'date_birth': date(1987, 9, 17)},
        {'first_name': 'Сергей', 'last_name': 'Волков', 'email': 'sergey.volkov@clinic.com', 'phone': generate_phone(),
         'gender': 'male', 'date_birth': date(1979, 2, 25)}
    ]

    # Пациенты
    patients = [
        {'first_name': 'Николай', 'last_name': 'Фёдоров', 'email': 'nikolay.fedorov@mail.com',
         'phone': generate_phone(), 'gender': 'male', 'date_birth': date(1990, 3, 15)},
        {'first_name': 'Анна', 'last_name': 'Козлова', 'email': 'anna.kozlova@mail.com', 'phone': generate_phone(),
         'gender': 'female', 'date_birth': date(1992, 8, 24)},
        {'first_name': 'Павел', 'last_name': 'Михайлов', 'email': 'pavel.mikhailov@mail.com', 'phone': generate_phone(),
         'gender': 'male', 'date_birth': date(1993, 12, 5)}
    ]

    # Генерация пользователей с известными паролями
    for doctor in doctors:
        password = 'password123'  # Пароль по умолчанию для врачей
        sub_role = random.choice(sub_roles)  # Рандомно выбираем подроль
        print(
            f"Создан врач {doctor['first_name']} {doctor['last_name']}, пароль: {password}, подроль: {sub_role.sub_role}")
        user = User.objects.create(
            first_name=doctor['first_name'],
            last_name=doctor['last_name'],
            email=doctor['email'],
            phone=doctor['phone'],
            gender=doctor['gender'],
            date_birth=doctor['date_birth'],
            role=doctor_role,
            sub_role=sub_role,
            password=make_password(password)  # Хешируем пароль
        )
        assign_avatar_from_dicebear(user)

    for patient in patients:
        password = 'patientpass'  # Пароль по умолчанию для пациентов
        print(f"Создан пациент {patient['first_name']} {patient['last_name']}, пароль: {password}")
        user = User.objects.create(
            first_name=patient['first_name'],
            last_name=patient['last_name'],
            email=patient['email'],
            phone=patient['phone'],
            gender=patient['gender'],
            date_birth=patient['date_birth'],
            role=patient_role,
            password=make_password(password)  # Хешируем пароль
        )
        assign_avatar_from_dicebear(user)

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0010_alter_user_email'),
    ]

    operations = [
        migrations.RunPython(create_doctors_and_patients),
    ]
